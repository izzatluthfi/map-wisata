{"version":3,"file":"static/js/68.d56bf3d1.chunk.js","mappings":"wIACS,IAAMA,EAAY,SAACC,GAGxB,OAFe,IAAIC,WACAC,gBAAgBF,EAAM,aAC9BG,KAAKC,aAAe,EACjC,C,mJCAIC,EAAY,CAChB,CACEC,MAAO,QACPC,MAAO,IAET,CACED,MAAO,OACPC,MAAO,QAET,CACED,MAAO,UACPC,MAAO,WAET,CACED,MAAO,UACPC,MAAO,WAET,CACED,MAAO,SACPC,MAAO,UAET,CACED,MAAO,UACPC,MAAO,YAII,SAASC,EAAQC,GAC9B,MAA0BC,EAAAA,SAAe,IAAG,eAArCH,EAAK,KAAEI,EAAQ,KAChBC,GAAWC,EAAAA,EAAAA,MASjB,OACI,SAACC,EAAA,GAAI,gBACHP,MAAOA,EACPQ,SAVe,SAACC,EAAOC,GAC3BN,EAASM,GAGTL,EAAS,GAAD,OAAIH,EAAMS,IAAG,YAAID,GAC3B,EAMME,QAAQ,aACRC,cAAc,OACd,aAAW,YACPX,GAAK,aAERJ,GAAaA,EAAUgB,KAAI,SAAAC,GAC1B,OACI,SAACC,EAAA,EAAG,CAEAjB,MAAOgB,EAAKhB,MACZC,MAAOe,EAAKf,OAFPe,EAAKhB,MAKpB,MAGR,C,wBCxCe,SAASkB,IACtB,IAAQC,GAAaC,EAAAA,EAAAA,MAAbD,SACJE,EAAS,GAIXA,EADEF,EACOG,EAAAA,QAAe,SAACC,GACvB,OAAOA,EAAQC,WAAWC,WAAaN,CACzC,IAESG,EAWX,OACE,iBAAKI,UAAU,iDAAgD,WAC7D,gBAAKA,UAAU,yBAAwB,UACrC,SAACxB,EAAO,CAACU,IAAI,iBAAiBc,UAAU,YAE1C,gBAAKA,UAAU,kBAAiB,UAC9B,gBAAKA,UAAU,qFAAoF,SAChGL,EAAON,KAAI,SAACQ,EAASI,GACpB,OACE,iBAEED,UAAU,yGAAwG,WAElH,gBACEE,IAAKL,EAAQC,WAAWK,eACxBH,UAAU,2BACVI,IAAKP,EAAQC,WAAWO,KACxBC,QAAQ,UAEV,iBAAKN,UAAU,wCAAuC,WACpD,eAAIA,UAAU,OAAM,UAClB,SAAC,KAAI,CACHO,GAAE,yBAAoBV,EAAQC,WAAWO,MACzCL,UAAU,gGAA+F,SAExGH,EAAQC,WAAWO,UAGxB,eAAGL,UAAU,qBAAoB,WAnCpBQ,EAoCUX,EAAQC,WAAWU,aAnC9BzC,EAAAA,EAAAA,GAAUyC,GACOC,MAAM,KACTC,MAAM,EAAG,IAAIC,KAAK,KAClC,QAiCR,SAAC,KAAI,CACHJ,GAAE,yBAAoBV,EAAQC,WAAWO,MACzCL,UAAU,mEAAkE,kCAtB7EC,GAjBS,IAACO,CA+CrB,UAKV,CA5EAZ,EAAUA,EAAAA,SAAAA,MAAsB,SAACgB,EAAGC,GAClC,OAAID,EAAEd,WAAWO,KAAOQ,EAAEf,WAAWO,MAC3B,EAENO,EAAEd,WAAWO,KAAOQ,EAAEf,WAAWO,KAC5B,EAEF,CACT,G","sources":["Helper/Html.js","Component/TabMenu.jsx","Page/ListPlace.jsx"],"sourcesContent":["  // parse html string to html element\r\n  export const parseHtml = (html) => {\r\n    const parser = new DOMParser();\r\n    const doc = parser.parseFromString(html, \"text/html\");\r\n    return doc.body.textContent || \"\";\r\n  };","import * as React from 'react';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst categorys = [\r\n  {\r\n    label: \"Semua\",\r\n    value: \"\",\r\n  },\r\n  {\r\n    label: \"Alam\",\r\n    value: \"alam\",\r\n  },\r\n  {\r\n    label: \"Edukasi\",\r\n    value: \"edukasi\",\r\n  },\r\n  {\r\n    label: \"Kuliner\",\r\n    value: \"kuliner\",\r\n  },\r\n  {\r\n    label: \"Religi\",\r\n    value: \"religi\",\r\n  },\r\n  {\r\n    label: \"Sejarah\",\r\n    value: \"sejarah\",\r\n  },\r\n];\r\n\r\nexport default function TabMenu(props) {\r\n  const [value, setValue] = React.useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n\r\n    // navigate by category\r\n    navigate(`${props.uri}/${newValue}`);\r\n  };\r\n\r\n  return (\r\n      <Tabs\r\n        value={value}\r\n        onChange={handleChange}\r\n        variant=\"scrollable\"\r\n        scrollButtons=\"auto\"\r\n        aria-label=\"tab menu\"\r\n        {...props}\r\n      >\r\n        {categorys && categorys.map(item => {\r\n          return(\r\n              <Tab\r\n                  key={item.label}\r\n                  label={item.label}\r\n                  value={item.value}\r\n              />\r\n          )\r\n        })}\r\n      </Tabs>\r\n  );\r\n}","import * as React from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\n\r\n// import components\r\nimport TabMenu from \"../Component/TabMenu\";\r\n\r\n// import geojson\r\nimport geojson from \"../wisata.json\";\r\n\r\n// import helper\r\nimport { parseHtml } from \"../Helper/Html\";\r\n\r\n// sort geojson by features name\r\ngeojson = geojson.features.sort((a, b) => {\r\n  if (a.properties.nama < b.properties.nama) {\r\n    return -1;\r\n  }\r\n  if (a.properties.nama > b.properties.nama) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n});\r\n\r\nexport default function ListPlace() {\r\n  const { category } = useParams();\r\n  let places = [];\r\n\r\n  // filter geojson by category\r\n  if (category) {\r\n    places = geojson.filter((feature) => {\r\n      return feature.properties.kategori === category;\r\n    });\r\n  } else {\r\n    places = geojson;\r\n  }\r\n\r\n  // generate sort description cut by word\r\n  const generateDescription = (description) => {\r\n    const parsedDescription = parseHtml(description);\r\n    const descriptionArray = parsedDescription.split(\" \");\r\n    const descriptionCut = descriptionArray.slice(0, 20).join(\" \");\r\n    return descriptionCut + \"...\";\r\n  };\r\n\r\n  return (\r\n    <div className=\"h-screen min-h-max overflow-y-auto bg-slate-50\">\r\n      <div className=\"flex lg:justify-center\">\r\n        <TabMenu uri=\"/daftar-tempat\" className=\"mb-4\" />\r\n      </div>\r\n      <div className=\"mx-2 mt-2 mb-16\">\r\n        <div className=\"grid gap-8 xl:px-6 lg:grid-cols-3 sm:max-w-sm sm:mx-auto lg:max-w-full items-start\">\r\n          {places.map((feature, i) => {\r\n            return (\r\n              <div\r\n                key={i}\r\n                className=\"overflow-hidden transition duration-200 transform rounded shadow-sm hover:scale-[1.01] hover:shadow-lg\"\r\n              >\r\n                <img\r\n                  src={feature.properties.imageThumbnail}\r\n                  className=\"object-cover w-full h-64\"\r\n                  alt={feature.properties.nama}\r\n                  loading=\"lazy\"\r\n                />\r\n                <div className=\"p-5 border border-t-0 bg-white h-full\">\r\n                  <h1 className=\"mb-3\">\r\n                    <Link\r\n                      to={`/detail-tempat/${feature.properties.nama}`}\r\n                      className=\"text-xl font-title leading-5 transition-colors duration-200 hover:text-deep-purple-accent-700\"\r\n                    >\r\n                      {feature.properties.nama}\r\n                    </Link>\r\n                  </h1>\r\n                  <p className=\"mb-2 text-gray-700\">\r\n                    {generateDescription(feature.properties.description)}\r\n                    <Link\r\n                      to={`/detail-tempat/${feature.properties.nama}`}\r\n                      className=\"text-blue-600 transition-colors duration-200 hover:text-blue-700\"\r\n                    >\r\n                      selengkapnya\r\n                    </Link>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["parseHtml","html","DOMParser","parseFromString","body","textContent","categorys","label","value","TabMenu","props","React","setValue","navigate","useNavigate","Tabs","onChange","event","newValue","uri","variant","scrollButtons","map","item","Tab","ListPlace","category","useParams","places","geojson","feature","properties","kategori","className","i","src","imageThumbnail","alt","nama","loading","to","description","split","slice","join","a","b"],"sourceRoot":""}